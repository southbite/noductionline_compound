var i = 0, total = 0;
var MAX_OPS = 100000;

var BaseController = require('./').BaseController;
var MyController = BaseController.constructClass('MyController');

MyController.actions.driveCar = function (c) {
    c.next();
};
MyController.actions.accelerate = function (c) {
    c.next();
};
MyController.actions.brake = function (c) {
    c.next();
};

MyController.before.push([someHook, {only: 'driveCar'}, 'look around']);
MyController.before.push([someHook, {only: 'driveCar'}, 'look forward']);
MyController.before.push([someHook, {except: ['accelerate', 'driveCar']}, 'think']);
MyController.before.push([someHook, {except: ['accelerate', 'driveCar']}, 'think again']);
MyController.before.push([someHook, {except: ['brake']}, 'pray']);

var ctl = new MyController;

// ctl.getLogger().on('afterHook', function (ctl, name) { console.log('<<<', name); });

function benchmark1() {
    var i = 0;
    while (++i < MAX_OPS) {
        var req = {}, res = {};
        ctl.perform('driveCar', req, res, done);
        ctl.perform('accelerate', req, res, done);
        ctl.perform('brake', req, res, done);
        ctl.perform('driveCar', req, res, done);
    }
}

function benchmark2() {
    var i = 0;
    while (++i < MAX_OPS) {
        var req = {}, res = {};
        driveCar(req, res, done);
        accelerate(req, res, done);
        brake(req, res, done);
        driveCar(req, res, done);
    }
}

function done(c) { total += 1; }
function someHook(c) {
    // do some simple math
    var a = Date.now() * Math.random();
    c.next ? c.next() : c();
}

while (i < 20) {
    var time = Date.now();
    benchmark1();
    console.log(++i, Date.now() - time, Math.round(process.memoryUsage().heapUsed / 1024 / 1024), Math.round(process.memoryUsage().heapTotal / 1024 / 1024));
}

//////////////////////////

function driveCar() {
    var locals = {};
    someHook(function () {
        someHook(function () {
            someHook(function () {
                done();
            });
        });
    });
}

function accelerate() {
    var locals = {};
    someHook(function () {
        done();
    });
}

function brake() {
    var locals = {};
    someHook(function(){
        someHook(function () {
            done();
        });
    });
}

